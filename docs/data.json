{
    "project": {
        "name": "Ember JSON API Resources",
        "description": "Lightweight persistence for an Ember CLI app using the JSON API 1.0 specification.",
        "version": "0.2.1",
        "url": "https://github.com/pixelhandler/ember-jsonapi-resources"
    },
    "files": {
        "addon/adapters/application.js": {
            "name": "addon/adapters/application.js",
            "modules": {
                "adapter": 1
            },
            "classes": {
                "ApplicationAdapter": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/initializers/store.js": {
            "name": "addon/initializers/store.js",
            "modules": {
                "store": 1
            },
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/authorization.js": {
            "name": "addon/mixins/authorization.js",
            "modules": {
                "authorization": 1
            },
            "classes": {
                "AuthorizationMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/mixins/service-cache.js": {
            "name": "addon/mixins/service-cache.js",
            "modules": {
                "cache": 1
            },
            "classes": {
                "ServiceCacheMixin": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/models/resource.js": {
            "name": "addon/models/resource.js",
            "modules": {
                "resource": 1
            },
            "classes": {
                "Resource": 1,
                "RelatedProxyUtil": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/serializers/application.js": {
            "name": "addon/serializers/application.js",
            "modules": {
                "serializer": 1
            },
            "classes": {
                "ApplicationSerializer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "addon/services/store.js": {
            "name": "addon/services/store.js",
            "modules": {},
            "classes": {
                "StoreService": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "ember-jsonapi-resources": {
            "name": "ember-jsonapi-resources",
            "submodules": {
                "adapter": 1,
                "store": 1,
                "authorization": 1,
                "cache": 1,
                "resource": 1,
                "serializer": 1
            },
            "classes": {
                "ApplicationAdapter": 1,
                "AuthorizationMixin": 1,
                "ServiceCacheMixin": 1,
                "Resource": 1,
                "RelatedProxyUtil": 1,
                "ApplicationSerializer": 1,
                "StoreService": 1
            },
            "fors": {},
            "namespaces": {},
            "file": "addon/services/store.js",
            "line": 10
        },
        "adapter": {
            "name": "adapter",
            "submodules": {},
            "classes": {
                "ApplicationAdapter": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/adapters/application.js",
            "line": 9,
            "description": "Adapter for a JSON API endpoint, use as a service for your backend"
        },
        "store": {
            "name": "store",
            "submodules": {},
            "classes": {
                "StoreService": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/services/store.js",
            "line": 10,
            "description": "Service for a JSON API endpoint a facade to your resource adapter"
        },
        "authorization": {
            "name": "authorization",
            "submodules": {},
            "classes": {
                "AuthorizationMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/mixins/authorization.js",
            "line": 8,
            "description": "A Mixin class for storage of credential/token uses with a HTTP Authorization request-header\n\nThe default solution is to use localStorage['AuthorizationHeader'] for the credential"
        },
        "cache": {
            "name": "cache",
            "submodules": {},
            "classes": {
                "ServiceCacheMixin": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/mixins/service-cache.js",
            "line": 8,
            "description": "A Mixin class for caching JSON API resource objects"
        },
        "resource": {
            "name": "resource",
            "submodules": {},
            "classes": {
                "Resource": 1,
                "RelatedProxyUtil": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/models/resource.js",
            "line": 354,
            "description": "A Resource class to create JSON API resource objects\n\nSee <http://jsonapi.org/format/#document-resource-objects>"
        },
        "serializer": {
            "name": "serializer",
            "submodules": {},
            "classes": {
                "ApplicationSerializer": 1
            },
            "fors": {},
            "is_submodule": 1,
            "namespaces": {},
            "module": "ember-jsonapi-resources",
            "namespace": "",
            "file": "addon/serializers/application.js",
            "line": 9,
            "description": "Serializer/Deserializer for a JSON API resource object, used by adapter"
        }
    },
    "classes": {
        "ApplicationAdapter": {
            "name": "ApplicationAdapter",
            "shortname": "ApplicationAdapter",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "adapter",
            "namespace": "",
            "file": "addon/adapters/application.js",
            "line": 9,
            "description": "Adapter for a JSON API endpoint, use as a service for your backend",
            "requires": [
                "Ember.Inflector"
            ],
            "uses": [
                "Ember.Evented"
            ],
            "static": 1
        },
        "AuthorizationMixin": {
            "name": "AuthorizationMixin",
            "shortname": "AuthorizationMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "authorization",
            "namespace": "",
            "file": "addon/mixins/authorization.js",
            "line": 8,
            "description": "A Mixin class for storage of credential/token uses with a HTTP Authorization request-header\n\nThe default solution is to use localStorage['AuthorizationHeader'] for the credential"
        },
        "ServiceCacheMixin": {
            "name": "ServiceCacheMixin",
            "shortname": "ServiceCacheMixin",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "cache",
            "namespace": "",
            "file": "addon/mixins/service-cache.js",
            "line": 8,
            "description": "A Mixin class for caching JSON API resource objects",
            "requires": [
                "Ember.Inflector"
            ]
        },
        "Resource": {
            "name": "Resource",
            "shortname": "Resource",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "resource",
            "namespace": "",
            "file": "addon/models/resource.js",
            "line": 9,
            "description": "A Resource class to create JSON API resource objects\n\nSee <http://jsonapi.org/format/#document-resource-objects>",
            "requires": [
                "Ember.Inflector"
            ],
            "static": 1
        },
        "RelatedProxyUtil": {
            "name": "RelatedProxyUtil",
            "shortname": "RelatedProxyUtil",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "resource",
            "namespace": "",
            "file": "addon/models/resource.js",
            "line": 354,
            "description": "Mixin for creating promise proxy objects for related resources",
            "static": 1
        },
        "ApplicationSerializer": {
            "name": "ApplicationSerializer",
            "shortname": "ApplicationSerializer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "serializer",
            "namespace": "",
            "file": "addon/serializers/application.js",
            "line": 9,
            "description": "Serializer/Deserializer for a JSON API resource object, used by adapter",
            "static": 1
        },
        "StoreService": {
            "name": "StoreService",
            "shortname": "StoreService",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "ember-jsonapi-resources",
            "submodule": "store",
            "namespace": "",
            "file": "addon/services/store.js",
            "line": 10,
            "description": "Service for a JSON API endpoint a facade to your resource adapter",
            "requires": [
                "Ember.Inflector"
            ],
            "static": 1
        }
    },
    "classitems": [
        {
            "file": "addon/adapters/application.js",
            "line": 19,
            "description": "The name of the entity",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "required": 1,
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 28,
            "description": "The url for the entity, e.g. /posts or /api/v1/posts",
            "itemtype": "property",
            "name": "url",
            "type": "String",
            "required": 1,
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 37,
            "description": "Find resource(s) using an id or a using a query `{id: '', query: {}}`",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "options",
                    "description": "use a string for a single id or an object",
                    "type": "Object|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 58,
            "description": "Find a resource by id, optionally pass a query object, e.g. w/ filter param(s)\n\nUses a url like: /photos/1",
            "itemtype": "method",
            "name": "findOne",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "query",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 74,
            "description": "Find resources using an optional query object, e.g. w/ pagination params",
            "itemtype": "method",
            "name": "findQuery",
            "params": [
                {
                    "name": "query",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 88,
            "description": "Find resources using an optional query object, e.g. w/ pagination params\n\nA Url like: /photos/1/relationships/photographer is a required param",
            "itemtype": "method",
            "name": "findRelated",
            "params": [
                {
                    "name": "resource",
                    "description": "name (plural) to lookup the service object w/ serializer\n  or {Object} `{'resource': relation, 'type': type}` used when type is not the\n  same as the resource name, to fetch relationship using a different service",
                    "type": "String"
                },
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 112,
            "description": "Create a new resource, sends a POST request",
            "itemtype": "method",
            "name": "createResource",
            "params": [
                {
                    "name": "the",
                    "description": "resource instance to serialize",
                    "type": "Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 128,
            "description": "Patch an existing resource, sends a PATCH request. After promise is resolved\nthe `didUpdateResource` event is triggered, given an error response a event\n`resourceError` is triggered. A resource may listen on its `service` reference.",
            "itemtype": "method",
            "name": "updateResource",
            "params": [
                {
                    "name": "the",
                    "description": "resource instance to serialize the changed attributes",
                    "type": "Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 152,
            "description": "Patch a relationship, either add or remove, sends a PATCH request\n\nAdds with payload: `{ \"data\": { \"type\": \"comments\", \"id\": \"12\" } }`\nRemoves with payload: `{ \"data\": null }`",
            "itemtype": "method",
            "name": "patchRelationship",
            "params": [
                {
                    "name": "the",
                    "description": "resource instance, has URLs via it's relationships property",
                    "type": "Resource"
                },
                {
                    "name": "resource",
                    "description": "name (plural) to find the url from the resource instance",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 176,
            "description": "Delete an existing resource, sends a DELETE request",
            "itemtype": "method",
            "name": "deleteResource",
            "params": [
                {
                    "name": "the",
                    "description": "name (plural) or resource instance w/ self link",
                    "type": "String|Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 194,
            "description": "Makes a fetch request via Fetch API\n\nsee http://updates.html5rocks.com/2015/03/introduction-to-fetch",
            "itemtype": "method",
            "name": "fetch",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "- may include a query object or an update flag",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Ember.RSVP.Promise"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 240,
            "description": "Adds params and headers or Fetch request.\n\n- The HTTP Header is set for Content-Type: application/vnd.api+json\n- Sets Authorization header if accessible in the `authorizationCredential` property",
            "itemtype": "method",
            "name": "fetchOptions",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 261,
            "description": "Sets Authorization header if accessible in the `authorizationCredential` property",
            "itemtype": "method",
            "name": "fetchAuthorizationHeader",
            "params": [
                {
                    "name": "options",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 278,
            "description": "Authentication credentials/token used with HTTP authentication\nThis property should be added by an Authorization Mixin",
            "itemtype": "property",
            "name": "authorizationCredential",
            "type": "String",
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 287,
            "description": "The name of the Authorization request-header field\nThis property should be added by an Authorization Mixin",
            "itemtype": "property",
            "name": "authorizationHeaderField",
            "type": "String",
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 296,
            "description": "Hook to customize the URL, e.g. if your API is behind a proxy and you need\nto swap a portion of the domain to make a request on the same domain.",
            "itemtype": "method",
            "name": "fetchUrl",
            "params": [
                {
                    "name": "url",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "String"
            },
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 308,
            "description": "Noop as a hook for defining how deserialized resource objects are cached,\ne.g. in memory",
            "itemtype": "method",
            "name": "cacheResource",
            "params": [
                {
                    "name": "resp",
                    "description": "w/ props: {Object} meta, {Array|Object} data, & {Object} headers",
                    "type": "Object"
                }
            ],
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 317,
            "description": "Noop as a hook for defining how to handle cache after updating a resource",
            "itemtype": "method",
            "name": "cacheUpdate",
            "params": [
                {
                    "name": "resp",
                    "description": "w/ props: {Object} meta, {Array|Object} data, & {Object} headers",
                    "type": "Object"
                }
            ],
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/adapters/application.js",
            "line": 325,
            "description": "Initialize events to communicate on the resource instances' service reference.\nListens for resource objects trigging `attributeChanged` events",
            "itemtype": "method",
            "name": "initEvents",
            "class": "ApplicationAdapter",
            "module": "ember-jsonapi-resources",
            "submodule": "adapter"
        },
        {
            "file": "addon/initializers/store.js",
            "line": 8,
            "description": "Initializer for the store service, injects into the route and controller",
            "itemtype": "method",
            "name": "initialize",
            "requires": [
                "StoreService"
            ],
            "class": "AuthorizationMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/mixins/authorization.js",
            "line": 18,
            "description": "The name of the Authorization request-header field",
            "itemtype": "property",
            "name": "authorizationHeaderField",
            "type": "String",
            "required": 1,
            "class": "AuthorizationMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "authorization"
        },
        {
            "file": "addon/mixins/authorization.js",
            "line": 27,
            "description": "The name key, stored locally, that references the Authorization request-header credential/token",
            "itemtype": "property",
            "name": "authorizationHeaderStorageKey",
            "type": "String",
            "required": 1,
            "class": "AuthorizationMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "authorization"
        },
        {
            "file": "addon/mixins/authorization.js",
            "line": 36,
            "description": "Authentication credentials/token used with HTTP authentication",
            "itemtype": "property",
            "name": "authorizationCredential",
            "type": "String",
            "required": 1,
            "class": "AuthorizationMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "authorization"
        },
        {
            "file": "addon/mixins/authorization.js",
            "line": 55,
            "description": "Storage type localStorage or sessionStorage",
            "itemtype": "property",
            "name": "_storage",
            "type": "String",
            "access": "private",
            "tagname": "",
            "class": "AuthorizationMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "authorization"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 16,
            "description": "Cache object",
            "itemtype": "property",
            "name": "cache",
            "type": "Object",
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 24,
            "description": "Initialize a cache object",
            "itemtype": "method",
            "name": "initCache",
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 36,
            "description": "Store response object(s) in the cache",
            "itemtype": "method",
            "name": "cacheResource",
            "params": [
                {
                    "name": "resp",
                    "description": "w/ props: {Object} meta, {Array|Object} data, & {Object} headers",
                    "type": "Object"
                }
            ],
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 47,
            "description": "Store meta data in the cache",
            "itemtype": "method",
            "name": "cacheMeta",
            "params": [
                {
                    "name": "resp",
                    "description": "w/ props: {Object} meta, {Array|Object} data, & {Object} headers",
                    "type": "Object"
                }
            ],
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 59,
            "description": "Store resource objects in the `data` array of the cache",
            "itemtype": "method",
            "name": "cacheData",
            "params": [
                {
                    "name": "resp",
                    "description": "w/ props: {Object} meta, {Array|Object} data, & {Object} headers",
                    "type": "Object"
                }
            ],
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 90,
            "description": "Add or update cache data",
            "itemtype": "method",
            "name": "cacheUpdate",
            "params": [
                {
                    "name": "resp",
                    "description": "w/ props: {Object} meta, {Array|Object} data, & {Object} headers",
                    "type": "Object"
                }
            ],
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 116,
            "description": "Store meta from headers on resource meta, window.fetch includes\na headers object in the response use `headers.get` to lookup data\nfrom the headers for cache-control, date, and etag.",
            "itemtype": "method",
            "name": "cacheControl",
            "params": [
                {
                    "name": "resource",
                    "description": "",
                    "type": "Resource"
                },
                {
                    "name": "headers",
                    "description": "",
                    "type": "Object"
                }
            ],
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/mixins/service-cache.js",
            "line": 143,
            "description": "Lookup a resource from cached data",
            "itemtype": "method",
            "name": "cacheLookup",
            "params": [
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Resource|undefined"
            },
            "class": "ServiceCacheMixin",
            "module": "ember-jsonapi-resources",
            "submodule": "cache"
        },
        {
            "file": "addon/models/resource.js",
            "line": 20,
            "description": "The service object for the entity (adapter with cache and serializer)",
            "itemtype": "property",
            "name": "service",
            "type": "Object",
            "required": 1,
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 29,
            "description": "Extending Prototypes Must define a `type` value for the entity, e.g. `posts`",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "required": 1,
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 38,
            "description": "Persisted resource ID value",
            "itemtype": "property",
            "name": "id",
            "type": "String",
            "required": 1,
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 47,
            "description": "An optional `attributes` property of for a JSON API Resource object, setup in create()\n\nThis object will keep the values from the response object and may be mutable\nUse this as a refence for creating computed properties\n\nFor example the `attr()` helper sets up a properties based on this content",
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "attributes",
            "type": "Object",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 61,
            "description": "An optional `relationships` property of for a JSON API Resource object, setup in create()",
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "relationships",
            "type": "Object",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 70,
            "description": "An optional `links` property of for a JSON API Resource object, setup in create()",
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "links",
            "type": "Object",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 79,
            "description": "An optional property of for a JSON API Resource object, setup in create()",
            "access": "protected",
            "tagname": "",
            "itemtype": "property",
            "name": "meta",
            "type": "Object",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 88,
            "description": "Hash of attributes for changed/previous values",
            "access": "private",
            "tagname": "",
            "itemtype": "property",
            "name": "_attributes",
            "type": "Object",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 97,
            "description": "Flag for new instance, e.g. not peristed",
            "itemtype": "property",
            "name": "isNew",
            "type": "Boolean",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 105,
            "description": "Custom `toString` method used for clarity that the instance is a JSON API Resource kind of object",
            "itemtype": "method",
            "name": "toString",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 116,
            "description": "Adds related links object on the relationship hash",
            "itemtype": "method",
            "name": "addRelationship",
            "params": [
                {
                    "name": "related",
                    "description": "- resource name",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 136,
            "description": "Remove related links object on the relationship hash to have `null` data",
            "itemtype": "method",
            "name": "removeRelationship",
            "params": [
                {
                    "name": "related",
                    "description": "- resource name",
                    "type": "String"
                },
                {
                    "name": "id",
                    "description": "",
                    "type": "String"
                }
            ],
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 157,
            "itemtype": "method",
            "name": "changedAttributes",
            "return": {
                "description": "the changed attributes",
                "type": "Object"
            },
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 175,
            "itemtype": "method",
            "name": "previousAttributes",
            "return": {
                "description": "the previous attributes",
                "type": "Object"
            },
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 193,
            "description": "Initialize events to communicate with the service object, listen for `didUpdateResource`",
            "itemtype": "method",
            "name": "initEvents",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 205,
            "description": "Handler for `didUpdateResource` event, resets private _attributes used for changed/previous tracking",
            "itemtype": "method",
            "name": "didUpdateResource",
            "params": [
                {
                    "name": "json",
                    "description": "the updated data for the resource"
                }
            ],
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 221,
            "description": "A local cache duration, to minimize duplicate fetch requests",
            "itemtype": "property",
            "name": "cacheDuration",
            "type": "Number",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 229,
            "itemtype": "property",
            "name": "isCacheExpired",
            "type": "Boolean",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 241,
            "description": "To protect the JSON API Resource properties for attributes, links and\nrelationships these objects are setup during create(). This has to be\ndefined since the attr() helper needs to have new objects for each instance,\nto project from keeping a reference on the prototype.\n\nThe create method should only be called after looking up a factory from the\ncontainer, for example in a route's model hook:\n\n```\nmodel() {\n  return this.container.lookupFactory('model:posts').create({\n    attributes: {\n      title: 'The JSON API 1.0 Spec Rocks!'\n    }\n  });\n}\n```\n\nThe create method uses the container to lookup the factory's prototype and\nfind the computed properties used for relations to setup the relationships\nfor the Resource instance you create. Calling Resource#create without using\nthe factory lookup will result in an instance without a reference to the\napplication's container and you will have to manually setup the relationships\nobject prior to adding a relationship.",
            "itemtype": "method",
            "name": "create",
            "return": {
                "description": "instance with protected objects:\n  `attributes`, `links` and `relationships`",
                "type": "Resource"
            },
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 311,
            "description": "Helper to setup computed property for resource attributes",
            "itemtype": "method",
            "name": "attr",
            "class": "Resource",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 362,
            "description": "Checks for required `relationship` property",
            "itemtype": "method",
            "name": "init",
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 375,
            "description": "The name of the relationship",
            "itemtype": "property",
            "name": "resource",
            "type": "String",
            "required": 1,
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 384,
            "description": "The name of the type of resource",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "required": 1,
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 393,
            "description": "Proxy for the requested relation, resolves w/ content from fulfilled promise",
            "itemtype": "method",
            "name": "createProxy",
            "params": [
                {
                    "name": "resource",
                    "description": "",
                    "type": "Resource"
                },
                {
                    "name": "proxyFactory",
                    "description": "",
                    "type": "Ember.ObjectProxy|Ember.ArrayProxy"
                }
            ],
            "return": {
                "description": "proxy",
                "type": "PromiseProxy"
            },
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 424,
            "description": "Proxy url to fetch for the resource's relation",
            "itemtype": "method",
            "name": "proxyUrl",
            "params": [
                {
                    "name": "resource",
                    "description": "",
                    "type": "Resource"
                },
                {
                    "name": "relation",
                    "description": "",
                    "type": "String"
                }
            ],
            "return": {
                "description": "proxy",
                "type": "PromiseProxy"
            },
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 441,
            "description": "Lookup relation from service cache and pomisify result",
            "itemtype": "method",
            "name": "promiseFromCache",
            "params": [
                {
                    "name": "resource",
                    "description": "",
                    "type": "Resource"
                },
                {
                    "name": "relation",
                    "description": "",
                    "type": "String"
                },
                {
                    "name": "service",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise|null"
            },
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 468,
            "description": "Lookup data in service cache",
            "itemtype": "method",
            "name": "serviceCacheLookup",
            "params": [
                {
                    "name": "service",
                    "description": "",
                    "type": "Object"
                },
                {
                    "name": "data",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Resource|undefined"
            },
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 485,
            "description": "Helper to setup a has one relationship to another resource",
            "itemtype": "method",
            "name": "hasOne",
            "params": [
                {
                    "name": "relation",
                    "description": "Or, {Object} with properties for `resource` and `type`",
                    "type": "String"
                }
            ],
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/models/resource.js",
            "line": 527,
            "description": "Helper to setup a has many relationship to another resource",
            "itemtype": "method",
            "name": "hasMany",
            "params": [
                {
                    "name": "relation",
                    "description": "Or, {Object} with properties for `resource` and `type`",
                    "type": "String"
                }
            ],
            "class": "RelatedProxyUtil",
            "module": "ember-jsonapi-resources",
            "submodule": "resource"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 17,
            "description": "Serialize resource for the request payload",
            "itemtype": "method",
            "name": "serialize",
            "params": [
                {
                    "name": "resource",
                    "description": "- object to serialize",
                    "type": "Resource|Array"
                }
            ],
            "return": {
                "description": "json",
                "type": "Object"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializer"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 30,
            "description": "Serialize a resource object",
            "itemtype": "method",
            "name": "serializeResource",
            "params": [
                {
                    "name": "object",
                    "description": "to serialize",
                    "type": "Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializer"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 50,
            "description": "Serialize a resource object, but only the changed attributes",
            "itemtype": "method",
            "name": "serializeChanged",
            "params": [
                {
                    "name": "object",
                    "description": "to serialize",
                    "type": "Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Object"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializer"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 69,
            "description": "Deserialize response objects from the request payload",
            "itemtype": "method",
            "name": "deserialize",
            "params": [
                {
                    "name": "json",
                    "description": "- response object, extract resource(s)",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Ember.Array|Resource"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializer"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 86,
            "description": "Deserialize response objects in the payload data",
            "itemtype": "method",
            "name": "deserializeResources",
            "params": [
                {
                    "name": "collection",
                    "description": "",
                    "type": "Array"
                }
            ],
            "return": {
                "description": "",
                "type": "Object|Ember.Array"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializer"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 100,
            "description": "Deserialize response an object in the payload data",
            "itemtype": "method",
            "name": "deserializeResource",
            "params": [
                {
                    "name": "json",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "",
                "type": "Resource"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializer"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 111,
            "description": "Deserialize optional included array of payload and add to service cache",
            "itemtype": "method",
            "name": "deserializeIncluded",
            "params": [
                {
                    "name": "related",
                    "description": "",
                    "type": "Array"
                },
                {
                    "name": "resp",
                    "description": "(optional) e.g. headers, meta, etc.",
                    "type": "Object"
                }
            ],
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializer"
        },
        {
            "file": "addon/serializers/application.js",
            "line": 130,
            "description": "Create a Resource from a JSON API Resource Object\n\nSee <http://jsonapi.org/format/#document-resource-objects>",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_createResourceInstance",
            "params": [
                {
                    "name": "json",
                    "description": "",
                    "type": "Object"
                }
            ],
            "return": {
                "description": "(Resource) instance"
            },
            "class": "ApplicationSerializer",
            "module": "ember-jsonapi-resources",
            "submodule": "serializer"
        },
        {
            "file": "addon/services/store.js",
            "line": 19,
            "description": "Find resource(s) using an id or a using a query `{id: '', query: {}}`",
            "itemtype": "method",
            "name": "find",
            "params": [
                {
                    "name": "type",
                    "description": "- the entity or resource name will be pluralized unless a `{singleton: true}` option is passed",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "(object) or id (string)",
                    "type": "Object|String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 32,
            "description": "Access to the cached object",
            "itemtype": "method",
            "name": "all",
            "params": [
                {
                    "name": "type",
                    "description": "- the entity or resource name will be pluralized",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Ember.Array"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 44,
            "description": "Create a new resource, sends a POST request",
            "itemtype": "method",
            "name": "createResource",
            "params": [
                {
                    "name": "the",
                    "description": "resource instance to serialize",
                    "type": "Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 56,
            "description": "Patch an existing resource",
            "itemtype": "method",
            "name": "updateResource",
            "params": [
                {
                    "name": "type",
                    "description": "- the entity or resource name will be pluralized",
                    "type": "String"
                },
                {
                    "name": "the",
                    "description": "resource instance to serialize the changed attributes",
                    "type": "Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 69,
            "description": "Patch a relationship, either add or remove, sends a PATCH request\n\nAdds with payload: `{ \"data\": { \"type\": \"comments\", \"id\": \"12\" } }`\nRemoves with payload: `{ \"data\": null }`",
            "itemtype": "method",
            "name": "patchRelationship",
            "params": [
                {
                    "name": "type",
                    "description": "- the entity or resource name will be pluralized",
                    "type": "String"
                },
                {
                    "name": "the",
                    "description": "resource instance, has URLs via it's relationships property",
                    "type": "Resource"
                },
                {
                    "name": "resource",
                    "description": "name (plural) to find the url from the resource instance",
                    "type": "String"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 86,
            "description": "Delete an existing resource, sends a DELETE request",
            "itemtype": "method",
            "name": "deleteResource",
            "params": [
                {
                    "name": "type",
                    "description": "- the entity or resource name will be pluralized",
                    "type": "String"
                },
                {
                    "name": "the",
                    "description": "name (plural) or resource instance w/ self link",
                    "type": "String|Resource"
                }
            ],
            "return": {
                "description": "",
                "type": "Promise"
            },
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        },
        {
            "file": "addon/services/store.js",
            "line": 99,
            "description": "Lookup the injected service for a resource, pluralize type arg.",
            "access": "private",
            "tagname": "",
            "itemtype": "method",
            "name": "_service",
            "params": [
                {
                    "name": "type",
                    "description": "- the entity or resource name will be pluralized unless a `{singleton: true}` option is passed",
                    "type": "String"
                },
                {
                    "name": "options",
                    "description": "(object)",
                    "type": "Object"
                }
            ],
            "class": "StoreService",
            "module": "ember-jsonapi-resources",
            "submodule": "store"
        }
    ],
    "warnings": [
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " addon/mixins/service-cache.js:143"
        },
        {
            "message": "replacing incorrect tag: returns with return",
            "line": " addon/models/resource.js:241"
        }
    ]
}